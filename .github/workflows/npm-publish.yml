# Publishes module to registry when a new release is created.
# The following secrets need to be configured for this workflow:
# * NPM_TOKEN - Auth token from npmjs.com
name: Publish to NPM

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: https://registry.npmjs.org/

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install packages
        shell: bash
        run: |
          pnpm install --frozen-lockfile

      - name: Unit tests
        shell: bash
        run: |
          pnpm run test

      - name: Build
        shell: bash
        run: |
          pnpm run build

  release-please:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: https://registry.npmjs.org/

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install packages
        shell: bash
        run: |
          pnpm install --frozen-lockfile

      - name: Release package
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node

      - name: Publish package to NPM
        if: ${{ steps.release.outputs.release_created }}
        shell: bash
        run: |
          pnpm publish --access=public --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
